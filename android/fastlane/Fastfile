# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

  desc "Deploy to firebase app distribution"
  lane :distribute_to_firebase do |options|
    release_notes = options[:release_notes] 
    if release_notes.nil? then 
      puts "Nenhum release_note passado, colocando padrão"
      release_notes = "Nova versão do app sitio_christian" 
    end

    #Garante que existam essas variaveis no .env
    ensure_env_vars(
      env_vars:['FIREBASE_TOKEN', "FIREBASE_APP_ID", "GITHUB_USERNAME"]
    )
    #recupera as variaveis de ambiente do .env
    firebase_token = ENV['FIREBASE_TOKEN']
    app_id = ENV['FIREBASE_APP_ID']
    git_username = ENV['GITHUB_USERNAME']

    bump_version
    build_release_apk
    #após o build recebe o GRADLE_APK_OUTPUT_PATH como objeto de contexto
    apk_path = lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]

    firebase_app_distribution({
      app: app_id,
      apk_path: apk_path,
      groups: "testers",
      firebase_cli_token: firebase_token,
      release_notes: release_notes,
    })

    git_commit(path: "*", message: "Version Bump",skip_git_hooks: true)
    push_to_git_remote(force: true, no_verify:true)
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end

  private_lane :bump_version do 
    increment_version_code(app_project_dir: "**/app")
    increment_version_name(app_project_dir: "**/app")
  end
  private_lane :build_release_apk do
    gradle({
      task: "assemble",
      build_type: "Release"
    })
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end
  
end
